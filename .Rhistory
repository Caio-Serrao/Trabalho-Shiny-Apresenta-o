selectInput('sex', 'Select Sex', choices = c("M", "F")),
# Add slider input named "year" to select year between 1900 and 2010
sliderInput('year', 'Select Year', min = 1900, max = 2010, value = 1900),
# MODIFY CODE BELOW: Add a DT output named "table_top_10_names"
DT::DTOutput('table_top_10_names')
)
server <- function(input, output, session){
top_10_names <- function(){
babynames %>%
filter(sex == input$sex) %>%
filter(year == input$year) %>%
slice_max(prop, n = 10)
}
# MODIFY CODE BELOW: Render a DT output named "table_top_10_names"
output$table_top_10_names <- DT::renderDT({
top_10_names() %>%
DT::datatable()
})
}
shinyApp(ui = ui, server = server)
## ex3
ui <- fluidPage(
selectInput('name', 'Select Name', top_trendy_names$name), #esse top veio de algum lugar que noa sei
# CODE BELOW: Add a plotly output named 'plot_trendy_names'
plotly::plotlyOutput("plot_trendy_names")
)
ui <- fluidPage(
titlePanel("UFO Sightings"),
sidebarPanel(
selectInput("state", "Choose a U.S. state:", choices = unique(usa_ufo_sightings$state)),
dateRangeInput("dates", "Choose a date range:",
start = "1920-01-01",
end = "1950-01-01"
)
),
mainPanel(
tabsetPanel(
tabPanel("Plot", plotOutput("shapes")),
tabPanel("Table", tableOutput("duration_table"))
)
)
)
## Criando App que permita a implementação de múltiplas abas
ui <- fluidPage(
titlePanel('Titulo'),
sidebarLayout(
sidebarPanel(
textOutput('Aba')
),
mainPanel(
tabsetPanel(
id = 'aba_atual',
tabPanel('1', 'Aba 1'),
tabPanel('2', 'Aba 2'),
tabPanel('3', 'Aba 3'))
)
)
)
server <- function(input, output, session) {
output$Aba <- renderText({
paste0("Aba Atual: ", input$aba_atual)
})
}
shinyApp(ui, server)
### Usando temas do bslib
ui <- fluidPage(
theme = bslib::bs_theme()
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
### Usando temas do bslib
ui <- fluidPage(
theme = bslib::bs_theme(),
titlePanel("Sleeping habits in America")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
runApp('~/Documents/Dashboard_shiny_learning.R')
ui <- dashboardPage(header, sidebar, body)
library(shinydashboard)
install.packages(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
library(shinydashboard)
shinyApp(ui, server)
ui <- dashboardPage(header, sidebar, body)
ui <- dashboardPage(header, sidebar, body)
header <- dashboardHeader(title = "My first Dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
if(!require("pacman")) install.packages("pacman")
pacman::p_load("shiny",
"tidyverse",
"babynames",
"DT",
"shinythemes",
"gapminder",
"shinydashboard")
library
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
library
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
runApp('~/Documents/dashboard_shiny.R')
# Set the title of the shinydashboard
header <- dashboardHeader("Global soccer tournament")
# Set the title of the shinydashboard
header <- dashboardHeader("Global soccer tournament")
# Set the title of the shinydashboard
header <- dashboardHeader(title = "Global soccer tournament")
# Set up an empty side bar
sidebar <- dashboardSidebar()
# Set up an empty body
body <- dashboardBody()
# Set up the shinydashboard UI
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo um título para o header do dashboard
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 400)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo um título para o header do dashboard
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 200)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo um título para o header do dashboard
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 200)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
runApp('~/Documents/dashboard_shiny.R')
# Definindo um título para o header do dashboard
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 230)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo um título para o header do dashboard
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300,
dropdownMenu(type = "messages")
)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300,
dropdownMenu(type = "messages")
)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300,
dropdownMenu(type = "messages"),
dropdownMenu(type = "notifications"),
)
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300,
dropdownMenu(type = "messages"),
dropdownMenu(type = "notifications")
)
# Definindo a sidebar vazia
sidebar <- dashboardSidebar()
# Definindo o corpo/body do dashboard como vazio por enquanto
body <- dashboardBody()
# Definindo a User Interface (UI)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "Global soccer tournament",
titleWidth = 300,
dropdownMenu(type = "messages"),
dropdownMenu(type = "notifications")
)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 04 ######
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", icon = icon("file-excel"),
tabName = "stats")
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 04 ######
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Desativando a sidebar
sidebar <- dashboardSidebar(disable = TRUE)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Desativando a sidebar
sidebar <- dashboardSidebar(disable = TRUE)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Adicionando subtabs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"),
menuSubItem("Team 1", tabName = "team1",
icon = icon("user")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
# Adicionando inputs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("A couple of checkboxes",
checkboxGroupInput("checkboxes",
"Days of the week",
choices = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 01 ######
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
##### parte 02 ######
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "My first dashboard",
titleWidth = 300,
dropdownMenu(type = "messages"),
dropdownMenu(type = "notifications")
)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 03 ######
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 04 ######
# Adicionando subtabs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"),
menuSubItem("Team 1", tabName = "team1",
icon = icon("user")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 05 ######
# Adicionando inputs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("A couple of checkboxes",
checkboxGroupInput("checkboxes",
"Days of the week",
choices = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 06 ######
# Desativando a sidebar
sidebar <- dashboardSidebar(disable = TRUE)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
runApp('dashboard_shiny.R')
runApp('dashboard_shiny.R')
runApp('dashboard_shiny.R')
runApp('dashboard_shiny.R')
runApp('dashboard_shiny.R')
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
if(!require("pacman")) install.packages("pacman")
pacman::p_load("shiny",
"tidyverse",
"shinydashboard")
##### parte 01 ######
header <- dashboardHeader(title = "My first dashboard")
sidebar <- dashboardSidebar()
body <- dashboardBody()
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output){
}
shinyApp(ui, server)
##### parte 02 ######
# Definindo novos parâmetros no header
header <- dashboardHeader(title = "My first dashboard",
titleWidth = 300,
dropdownMenu(type = "messages"),
dropdownMenu(type = "notifications")
)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 03 ######
# Definindo a sidebar e seus parâmetros
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 04 ######
# Adicionando subtabs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("Statistics", tabName = "stats",
icon = icon("file-excel"),
menuSubItem("Team 1", tabName = "team1",
icon = icon("user")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 05 ######
# Adicionando inputs na sidebar
sidebar <- dashboardSidebar(width = 300,
sidebarMenu(
id = "pages",
menuItem("Many charts", tabName = "charts",
icon = icon("chart-line")),
menuItem("A couple of checkboxes",
checkboxGroupInput("checkboxes",
"Days of the week",
choices = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
))
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
##### parte 06 ######
# Desativando a sidebar
sidebar <- dashboardSidebar(disable = TRUE)
ui <- dashboardPage(header, sidebar, body)
server <- function(input, output) {
}
shinyApp(ui, server)
git pull
